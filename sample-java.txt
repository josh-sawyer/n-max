2:1:

public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World!");
    }
}

2:6:
/** JavaDoc comments */
public class HelloWorld {
    public static void main(String[] args) {
        // System.out.println("Hello World 1!");
        System.out.println("Hello World!");
        /* System.out.println("Hello World!"); */
    }
}

3:2:

public class HelloWorld {
    public static void main(String[] args) {
    	boolean booleanValue = false;
        System.out.println(booleanValue);
    	byte byteValue = 0;
        System.out.println(byteValue);
    	short shortValue = 0;
        System.out.println(shortValue);
    	char charValue1 = 'A';
        System.out.println(charValue1);
    	char charValue2 = 'a';
        System.out.println(charValue2);
    	int intValue = 0;
        System.out.println(intValue);
    	long longValue = 0L;
        System.out.println(longValue);
    	float floatValue = 0.0f;
        System.out.println(floatValue);
    	double doubleValue = 0.0;
        System.out.println(doubleValue);
    }
}

3:3:

public class HelloWorld {
    public static void main(String[] args) {
		int i = (int) 123.456;
        System.out.println(i);
    }
}

Implicit up-casting of primitive types

byte -> short \
                int -> long -> float -> double
         char /

3:4:

public class HelloWorld {
    public static void main(String[] args) {
    	int[] values1 = new int[10];
    	values1[0] = 10;
        System.out.println(values1[0]);
    	values1[1] = 12;
        System.out.println(values1[1]);
    	values1[0] = 13;
        System.out.println(values1[0]);
    	char[] values2 = {'a', 'A', 'b', 'B', 'c', 'C'};
        System.out.println(values2[0]);
        System.out.println(values2[1]);
        System.out.println(values2[2]);
        System.out.println(values2[3]);
        System.out.println(values2[4]);
        System.out.println(values2[5]);


    	int[][] values1 = { {1,4,7}, {5,6,3}, {2,8,9} };
    }
}

3:7:

public class HelloWorld {
    public static void main(String[] args) {
    	String bString = "true";
    	boolean bValue = Boolean.valueOf(bString).booleanValue();
        System.out.println(bValue);
    	String byString = "1";
		byte by = Byte.parseByte(byString);
        System.out.println(by);
    	String sString = "10";
		short s = Short.parseShort(sString);
        System.out.println(s);
    	String cString = "abc";
		char c = s.charAt(0);
        System.out.println(c);
    	String iString = "1";
		int i = Integer.parseInt(iString);
        System.out.println(i);
    	String fString = "1.2";
		float f = Float.parseFloat(fString);
        System.out.println(f);
    	String lString = "1";
		long l = Long.parseLong(lString);
        System.out.println(l);
    	String dString = "1";
		double d = Double.parseDouble(dString);
        System.out.println(d);
    }
}

4:1:

public class HelloWorld {
    public static void main(String[] args) {
    	int i1 = 1 + 1;
        System.out.println(i1);
    	int i2 = 2 - 1;
        System.out.println(i2);
    	int i3 = 5 * 5;
        System.out.println(i3);
    	int i4 = 4 / 2;
        System.out.println(i4);
    	int i5 = 10;
        System.out.println(i5);
    	int i5n = -i5;
        System.out.println(i5n);
    	int i6 = 8 % 3;
        System.out.println(i6);
    	int i7 = 10;
    	i7++;
        System.out.println(i7);
        System.out.println(i7++);
        System.out.println(i7);
        System.out.println(++i7);
    }
}

4:3:

public class HelloWorld {
    public static void main(String[] args) {
    	String test = 1 + 1 + " equals " + 1 + 1;   // "2 equals 11"
        System.out.println(test);
        Date now = new Date();
        System.out.pringln(now.toString());
    }
}

4:4:

public class HelloWorld {
    public static void main(String[] args) {
    	int i1 = 3;
    	if (i > 2) {
        	System.out.pringln("i > 2");
    	}
    	if (i == 3) {
        	System.out.pringln("i == 2");
    	}

    	int i2 = 1;
		int j2 = 5;
		if ( (i2 != 1) && ((j2 / i2) > 1) ) {
        	System.out.pringln("Should not print.");
		}

		if ( (i2 != 0) || ((j2 / i2) > 1) ) {
        	System.out.pringln("You made it.");
		}
    }
}

4:7:

public class HelloWorld {
    public static void main(String[] args) {
    	short x = 3;
		x += 4.6;
		// short x = 3;
		// x = (short) (x + 4.6);
    }
}

4:8:

public class HelloWorld {
    public static void main(String[] args) {
    	int v1 = (1 + 2) * 3;
        System.out.pringln(v1);
    	boolean v2 = 1 < 2 ? true : false;
        System.out.pringln(v2);
        String str = "Hello World!";
    	int v3 = str.length();
        System.out.pringln(v3);
        System.out.pringln(str instanceof String);
    	Date v4 = new Date();
        System.out.pringln(v4);
    }
}

5:3:

public class HelloWorld {
    public static void main(String[] args) {
	    int x = 1;
	    // A local scope where args and x are visible

	    while (x <= 5) {
	        String msg = "x is now " + x;
	        // A local scope where args, x, and msg are visible
	        System.out.println(msg);
	    }
	    // next line will error
	    // System.out.println(msg);
	    // msg is no longer in scope, and has been flushed from memory
	}

}

5:4:

public class FindNumber {
    public static void main(String[] args) {
        if (args.length > 1) {
            System.err.println("Usage: FindNumber <num>");
            return;
        }
        int[] numbers = {1, 3, 4, 5, 7, 5, 2, 8, 9, 6};
        int findNumber = Integer.parseInt(args[0]);
        System.out.println(find(numbers, findNumber));
    }

    public static int find(int[] nums, int num) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == num) {
                return i;
            }
        }
        return -1;
    }
}

5:5:

public class LetterGrade {
    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Usage: LetterGrade <numeric-score>");
            return;
        }
        int score = Integer.parseInt(args[0]);
        char grade;

        if (score >= 90) {
            grade = 'A';
        } else if (score >= 80) {
            grade = 'B';
        } else if (score >= 70) {
            grade = 'C';
        } else if (score >= 60) {
            grade = 'D';
        } else {
            grade = 'F';
        }

        System.out.println("Grade = " + grade);
    }
}

5:6:

public class MonthFromNumber {
    public static void main(String[] args) {
        if (args.length != 1) {
            System.err.println("Usage: MonthFromNumber <month>");
            return;
        }
        int month = Integer.parseInt(args[0]);
        switch (month) {
            case 1:  System.out.println("January"); break;
            case 2:  System.out.println("February"); break;
            case 3:  System.out.println("March"); break;
            case 4:  System.out.println("April"); break;
            case 5:  System.out.println("May"); break;
            case 6:  System.out.println("June"); break;
            case 7:  System.out.println("July"); break;
            case 8:  System.out.println("August"); break;
            case 9:  System.out.println("September"); break;
            case 10: System.out.println("October"); break;
            case 11: System.out.println("November"); break;
            case 12: System.out.println("December"); break;
            default: System.out.println("Invalid month: " + month);
        }
    }
}

5:8:

public class WhileArguments {
    public static void main (String[] args) {
        int i = 0;
        while (i < args.length) {
            System.out.println(args[i]);
            i += 1;
        }
    }
}

5:9:

public class ForArguments {
    public static void main(String[] args) {
        for (int i = 0; i < args.length; i++) {
            System.out.println(args[i]);
        }
        System.out.pringln("For Each for loop.")
        for (String arg: args) {
            System.out.println(arg);
        }
    }
}

5:11:

public class SearchForNumber {
    public static void main (String[] args) {
        int[] nums = {1, 5, 4, 43, -2, 6, 4, 9 };
        int search = 4;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == search) {
                System.out.println("Found " + search + " at position " + i);
                break;
            }
        }
    }
}

5:12:

public class SkipOddNumbers {
    public static void main(String[] args) {
        int[] nums = { 0, 3, 4, 5, 7, 2, 6, 9, 8, 7, 1 };
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] % 2 != 0) {
                continue;
            }
            System.out.println(nums[i] + " is even");
        }
    }
}

5:13:

public class SearchForNumber2D {
    public static void main (String[] args) {
        int[][] nums = { {1, 3, 7, 5},
                         {5, 8, 4, 6},
                         {7, 4, 2, 9} };
        int search = 4;
        foundNumber:
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < nums[i].length; j++) {
                if (nums[i][j] == search) {
                    System.out.println(
                        "Found " + search + " at position " + i + "," + j);
                    break foundNumber;
                }
            }
        }
    }
}

Sample Input Reader:
public class MyExample {

	public static void main(String[] args) {
		Scanner reader = new Scanner(System.in);  // Reading from System.in
		Random rn = new Random();
		String answer = "y";
		Integer value = null;
		while(answer.equals("y")) {
			System.out.print("Would you like to role the dice? (y = yes : n = no): ");
			answer = reader.next(); 
			switch(answer) {
				case "y":
					value = rn.nextInt(6) + 1;
					System.out.println("Your role is : " + value);
					break;
				case "n":
					System.out.println("Bye!");
					continue;
				default:
					continue;
			}
		}
		reader.close();
	}

}
